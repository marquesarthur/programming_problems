import math


class Solution:

    def __is_prime(self, A):
        if A <= 1:
            return False

        for i in range(2, int(math.sqrt(A)) + 1):
            if A % i == 0:
                return False

        return True

    # This function imposes a performance bottleneck
    def __next_prime(self, val, current_prime):
        for i in range(int(current_prime) + 1, int(2 * current_prime)):
            if self.__is_prime(i):
                return i

        return val

    def __prime_factorization(self, val, ret, current_prime):
        if val <= 1:
            return

        if val % current_prime == 0:
            ret.add(current_prime)
            while val % current_prime == 0:
                val = val / current_prime
            next_prime = self.__next_prime(val, current_prime)
            self.__prime_factorization(val, ret, next_prime)
        else:
            next_prime = self.__next_prime(val, current_prime)
            self.__prime_factorization(val, ret, next_prime)

    # @param A : list of integers
    # @return an integer
    def solve(self, A):

        if not A:
            return 0

        ret = set()
        # I have to iterate A because G *= val can lead to overflow
        for val in A:
            if val == 0:
                return 0  # G will be 0 and there are no primes

            if self.__is_prime(val):
                ret.add(val)
            else:
                self.__prime_factorization(val, ret, 2)

        return len(ret)


A = "5195 6803 8563 9584 5162 1855 7586 6442 4109 5621 3212 8613 9248 1751 7873 7922 7231 7333 2623 6393 3202 1979 2914 9762 8848 6632 6925 2704 3660 3334 3526 5964 2291 8391 3676 6843 2450 8949 4529 9619 1762 669 9843 2542 2628 2203 2677 9732 8040 6491 5515 3743 1762 1310 9201 2753 6799 6934 5377 3299 1945 1698 893 5523 1879 2185 133 409 7928 3548 4978 5780 839 2170 6122 1995 7052 9914 8189 6759 2418 4122 7509 7919 2077 4675 2204 3795 5749 4497 7567 5674 5496 1831 4960 2388 5368 7514 3258 4368 3298 1261 320 3190 2286 168 2472 9897 3106 6168 2752 6254 400 4068 3158 2417 2995 472 8875 5108 5754 1989 3765 870 9270 9992 3417 5754 8502 4920 2084 8353 6295 4751 979 1186 9140 6717 7834 5510 2491 2259 7081 1884 4292 4 4635 5494 6753 7756 1228 3391 5393 9514 1197 2473 9724 7993 4677 165 854 4305 3635 9188 7370 8831 7308 102 9648 118 2641 9395 4393 6194 4122 778 3379 8955 3232 4844 4153 4790 2261 8176 525 2645 6193 155 6850 8952 4188 9897 5178 5282 9945 4647 838 2586 7831 4575 7144 7812 5533 9529 3113 5343 2890 8275 689 3139 5157 1499 3318 4486 9178 3484 6403 52 7314 6688 4635 7570 7362 2707 7043 6049 5376 3292 8906 7180 3081 919 9993 6407 9324 5952 9312 404 4660 452 3080 2156 1884 2514 637 4665 4693 696 6866 3092 5517 8178 5941 1844 3580 7818 9147 5636 1664 7492 9727 2787 9309 2190 2986 6820 6457 8199 3638 7092 4231 4912 5213 4483 3316 4592 3087 9123 520 2602 2759 3879 7809 1779 4630 8312 5002 9028 8821 3552 2027 997 365 1880 7613 8643 2586 1683 9361 5689 88 5572 5992 5959 3544 3454 3445 4794 2515 7306 212 5964 4800 405 1656 5186 4375 3435 3261 7861 5400 2871 4449 2166 9494 7745 1057 1166 5420 8703 2878 2476 6451 229 4875 2618 7943 7003 2810 1992 7208 2708 7858 1020 2090 6550 7102 561 7861 3968 9915 4435 5982 3114 3387 3681 9684 3627 3928 2817 5299 2815 5523 2450 8035 1206 4913 7448 6899 2333 8381 4763 6642 1824 1850 5304 7491 117 9405 2857 865 1391 4223 4495 3277 5512 3899 9117 1683 5671 6110 1784 2183 5841 1871 9367 8334 9375 9577 7468 1005 697 8774 1246 3231 8368 8524 2303 4127 2950 4005 3383 5367 2839 6978 392 6435 7335 5841 9006 3388 4699 3536 1280 727 9976 219 8759 5788 6593 1069 4173 9512 8329 9194 4884 7383 854 3274 4503 8658 8099 6466 4707 3391 9725 1922 1851 4857 5084 6430 5934 7788 3339 6629 8543 2802 6589 3663 6187 5222 9611 625 6952 4505 9808 1151 2657 2170 6970 7134 2563 9490 6498 3615 5636 6740 8709 8736 2381 1519 7797 258 1591 1610 3776 7962 9397 8925 8891 6941 5554 6016 4973 5247 1292 1392 7856 5251 5575 9011 492 3599 7610 9176 7268 4710 4314 7185 3982 5764 1805 4212 311 2588 4332 6110 8877 1088 1432 211 2776 5041 5316 4034 4442 5744 3925 5341 953 2058 5904 2012 5795 401 2056 19 2943 6046 2802 1880 6452 7047 6848 4935 9696 4588 4674 8572 982 3019 6323 6509 2225 4012 6236 8511 1610 2283 360 2453 178 4846 2060 7837 4976 9866 9664 450 4853 5718 5369 4559 2532 1485 9576 6151 769 6824 7066 4341 3622 1195 2450 2461 9589 2342 1183 1927 5649 2801 1017 2908 6826 8987 5075 2546 7454 6690 7588 5413 2724 3264 397 1101 4610 4092 7184 2396 4539 9990 8582 9062 4472 32 2425 3940 8933 2433 7254 9354 3658 4407 3476 1566 1161 1584 1367 9890 2159 9483 6951 7380 1230 8506 8275 4122 9895 5133 3875 6999 753 5799 8466 3991 6805 4255 2949 571 6427 1886 246 4657 2424 6461 258 5203 8042 4795 5818 9971 2503 7183 5695 4728 3497 8139 6425 1346 6002 709 2617 4052 9953 45 2656 7314 5109 4509 5132 1242 3431 2431 1981 3342 2528 9745 6793 5866 3463 5668 5371 7288 2213 5378 3301 1516 6050 9212 7306 1243 9291 4951 7240 9158 4504 3349 3875 7386 142 3693 9662 1290 2139 1339 9626 4719 5036 4864 6424 4133 7307 2222 9455 9628 2169 8353 6312 2738 759 6294 9835 6278 9724 1680 1436 5151 3201 3926 9912 4548 2165 7123 1932 8267 3611 8250 1884 3736 3069 9971 1876 502 471 5479 381 3416 4351 24 2677 9938 7435 877 4445 9351 6890 3293 279 5609 3785 4070 2922 9029 5728 505 7845 3445 8651 4120 7033 3665 2545 4613 4107 8241 7232 2135 6461 5160 1818 2685 4924 3943 2518 1620 1747 4472 2406 229 3743 5415 5577 7846 6772 7665 3749 9818 4120 5130 8268 6290 8429 8738 4444 8707 9451 1071 5874 1123 8407 3895 6960 9428 9613 5264 7773 3361 1899 9537 3994 315 1524 1187 2646 996 360 8061 2311 9211 1724 4231 7775 8439 8407 7937 4249 3689 1259 4540 5974 3532 3798 9362 4532 5559 6786 4850 7932 7733 5859 2402 5116 8472 8917 2348 4944 8703 7132 4375 4434 6735 1877 1610 8803 2149 1109 8023 6332 3673 2375 7304 777 7099 4306 9891 6574 5375 6973 2841 7100 5245 4142 642 9821 1451 9288 2273 1751 962 2577 5616 4219 6479 625 1084 8 6942 8803 4521 8284 8507 3389 4532 1114 1310 1577 7871 3370 3196 7199 6234 3912 9985 2372 1032 77 3389 8589 4166 438 2945 4333 6146 5831 7809 4659 4633 2328 5147 9416 4549 459 435 1676 1105 5727 295 5064 4800 1111 8088 9259 6119 5389 9717 9326 1048 4369 649 2330 7622 8910 4534 4369 9783 1043 4819 5708 8704 4724 8041 7667 6178 4258 1521 3706 8314 9645 6783 1084 856 8948 1242 5606 4163 9436 261 1435 4951 2516 6861 8434 1596 7107 3974 2336 7483 5549 312 204 8908 1032 8448 6714 2162 5290 9640 856 9447 7279 2512 3212 201 4502 2541 9020 5957 2523 6317 1480 6205 8036 4056 7238 3367 7397 2939 3923 5624 1967 4861 8143 345 5995 181 9403 5535 1107 9742 7054 1359 5798 3022 7013 1540 7652 9547 8901 7890 686 7979 9992 1163 7127 7462 2001 6849 1027 2507 3644 2332 512 3879 8200 374 9462 672 7154 4848 2390 8189 7796 2299 1613 2284 7460 6868 6939 1116 4970 992 5479 3229 5455 1982 1455 2747 9249 8576 8722 2019 9657 1353 9967 6551 674 7767 6118 7326 6411 8181 9741 1742 383 5134 8544 6926 1691 7608 1536 5791 306 352 69 7266 6997 8781 209 7968 5578 6801 9805 2242 2669 5295 3420 7213 8792 8693 9568 7826 5422 3836 6799 404 5355 1588 8894 2229 6438 8655 1435 5877 5581 8305 2592 811 2872 7277 9467 6507 7824 9488 7955 1344 9149 1701 7694 8385 3520 6656 8339 9974 3993 2184 1658 236 7748 6935 3601 9456 2551 4869 504 1866 8847 1945 539 3973 9233 8903 3626 6663 409 1319 3612 9762 8106 5008 7963 142 2825 3132 7301 8575 5613 69 8857 1940 5589 6244 7591 1428 5674 6859 5541 9064 7234 7211 912 6609 2577 2519 2529 8221 6885 161 9389 2619 2428 7945 6401 706 5587 74 7252 4405 8504 5882 7180 3607 9381 3889 5259 8804 5304 730 8132 5724 2372 5521 4668 2594 1900 9188 5192 9570 9986 3068 6563 6311 8537 6920 5078 4146 6769 7847 5810 6964 5630 6720 8143 7376 8393 6520 4287 3233 5855 3656 8674 9953 1371 3525 2058 703 8317 5819 3641 5438 2421 6426 8176 9325 3809 2161 3320 4317 7470 1075 7805 5082 9429 4614 9202 4194 508 5657 9853 9076 9016 7756 7354 414 8530 1332 8986 8686 3339 9319 6538 3207 9847 6025 1392 5662 6147 8696 4139 9783 4058 5019 6818 3359 6286 8176 6142 1516 2374 5130 4435 6291 9504 7135 6208 75 5743 9035 108 3976 7439 77 9570 3939 1182 408 2404 4681 8028 146 4280 1017 1488 1689 2327 6181 9145 3506 5582 1439 1358 6332 8022 5573 5486 6036 4444 3709 5665 5890 8379 5902 6847 5850 4876 2740 8267 7242 8921 2902 7407 6662 8310 7043 4904 8514 9492 6576 2670 2087 6073 4537 4568 6787 2130 1508 3183 2873 7744 7893 9698 9523 6933 4166 5516 4425 7931 4167 5425 5782 2891 5306 9192 4070 1466 6191 1528 9917 654 2767 4760 509 6882 5238 7598 3987 1195 8799 8694 8300 2616 2645 5237 7155 7019 6608 8439 3278 9625 4530 8585 5862 3897 2227 9068 6529 3140 7241 7171 2471 3840 5657 4808 1013 9896 7336 2357 6118 2574 2223 5945 4653 726 5113 1701 6722 7613 7008 5892 7395 52 382 6109 3560 5512 8307 838 4892 7918 2400 5532 4425 7052 4412 9700 9965 4900 7865 6739 1098 3084 7857 6833 2356 1600 6406 7569 591 7960 6486 5868 2626 7834 6648 5700 5050 9320 7530 3728 843 5480 353 4114 512 2877 5221 5591 8208 523 1153 3245 2463 257 1757 7813 794 6527 7148 6896 3490 40 5479 4339 7287 9182 1868 5362 4547 7442 4593 7962 3702 2955 3625 222 4667 5120 4273 2748 9011 5198 8504 4007 4370 8984 4607 1515 976 5724 2082 5894 5087 8375 9704 8250 7149 4715 7461 6476 2806 6498 3629 2726 6586 1682 7720 1976 7466 1222 9150 3282 3676 6142 7614 8934 7027 6636 4734 4136 7139 4029 5808 7245 2152 5326 3748 8327 6866 821 8042 1464 8080 7096 8697 8830 9092 8179 586 8371 1354 355 1363 2844 9762 9628 1930 66 2393 5436 6831 5081 5205 4345 1116 3546 660 3545 4538 2261 4714 6190 2356 5360 2844 6027 6272 690 4398 4794 5090 690 7975 3558 5836 3327 9082 3081 9013 2254 1650 6980 3862 6812 7042 8823 851 9203 78 1814 2213 4004 4295 2800 9533 6322 9946 872 2999 5120 3734 466 400 5311 2982 7562 7911 4405 5511 5265 6261 1949 7485 2743 6312 2580 5471 3040 5082 1039 1245 8898 2113 718 9702 3774 2812 9395 3665 6185 9951 4065 4158 9587 8936 1589 7144 1901 5305 2661 6615 8239 7710 4595 201 7033 5932 5906 4719 6623 9556 1502 9326 2241 980 4951 5498 2546 9111 2950 6663 8324 238 9342 2912 9117 9633 134 1721 8360 2659 6588 3676 4816 9696 1430 9711 4081 6391 8272 7635 8685 6121 5199 8161 8296 8922 5230 2251 3162 9516 2819 5780 3408 5649 2823 2671 5975 2888 3788 6495 2503 1128 123 3944 9377 1096 6947 8386 6596 4840 8982 3830 6332 6217 5391 9284 5716 8457 5215 9044 6029 1683 3089 5426 3012 4498 5941 7391 7934 2181 7757 1935 4366 5731 3197 3244 4639 4360 9586 4579 5818 2588 2247 5395 5690 1589 3697 676 1046 3925 1357 6552 8899 4852 9872 3802 7671 545 3590 8147 9789 9412 4105 6687 3123 9224 5698 6020 6870 4461 912 6858 5031 4541 8958 4011 9598 9617 7089 489 7718 4261 7917 7331 3606 6919 2596 4318 9908 1458 7057 3850 30 7468 9661 2836 4486 9793 3192 9944 228 5061 8270 5232 1623 9153 8314 8781 7187 4149 6152 5404 593 6840 2443 1578 7969 2236 2125 8324 8762 222 7853 7961 3847 9676 6752 2610 9503 8418 1524 4126 9433 8259 8430 5005 3149 3294 4893 6511 2312 3668 3028 4011 3726 8882 9929 4650 9794 9123 8529 3354 3159 9544 3630 6421 9106 3049 1312 6712 7767 7356 7164 962 9139 7135 9163 1082 1663 3661 4637 848 8436 6858 8737 1196 1183 451 9844 2999 9506 3435 3172 2881 8252 2176 101 1790 6654 2850 1409 9407 9810 2639 9549 7753 3932 8424 1269 3832 8129 8403 8186 2704 3476 3139 6491 6932 7636 5875 6097 5996 6459 8661 1845 2151 5014 4020 9104 174 1890 3035 4275 3413 2236 2671 8325 3334 3573 1066 3659 1817 8509 8963 1291 1639 6030 9078 965 3017 6698 32 2043 4355 9448 7688 2611 6005 9868 8496 5101 7760 8667 8145 8824 4811 8084 8557 9768 6643 1773 5752 3512 4387 7421 1689 8086 863 106"
A = [int(i) for i in A.split()]
expected = 935

print(Solution().solve(A))
print(Solution().solve(A) == 935)